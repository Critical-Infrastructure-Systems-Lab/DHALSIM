# Generated from controls.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,21,188,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,
        1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,4,5,66,8,5,11,5,12,5,67,1,6,
        1,6,1,6,3,6,73,8,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,
        8,1,9,1,9,3,9,89,8,9,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,
        1,11,1,11,1,11,1,12,5,12,104,8,12,10,12,12,12,107,9,12,1,12,5,12,
        110,8,12,10,12,12,12,113,9,12,1,12,4,12,116,8,12,11,12,12,12,117,
        1,13,4,13,121,8,13,11,13,12,13,122,1,14,1,14,5,14,127,8,14,10,14,
        12,14,130,9,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,
        1,15,1,16,5,16,144,8,16,10,16,12,16,147,9,16,1,16,1,16,1,16,1,16,
        1,17,1,17,1,17,1,17,5,17,157,8,17,10,17,12,17,160,9,17,1,17,1,17,
        1,18,1,18,5,18,166,8,18,10,18,12,18,169,9,18,1,18,1,18,1,18,1,18,
        1,19,4,19,176,8,19,11,19,12,19,177,1,19,1,19,1,20,4,20,183,8,20,
        11,20,12,20,184,1,20,1,20,4,128,145,158,167,0,21,1,1,3,2,5,3,7,4,
        9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
        33,17,35,18,37,19,39,20,41,21,1,0,5,1,0,48,57,4,0,48,57,65,90,95,
        95,97,122,1,0,65,90,1,0,10,10,3,0,9,10,13,13,32,32,201,0,1,1,0,0,
        0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,
        13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,
        23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,
        33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,1,
        43,1,0,0,0,3,48,1,0,0,0,5,51,1,0,0,0,7,56,1,0,0,0,9,59,1,0,0,0,11,
        65,1,0,0,0,13,72,1,0,0,0,15,74,1,0,0,0,17,79,1,0,0,0,19,88,1,0,0,
        0,21,90,1,0,0,0,23,96,1,0,0,0,25,105,1,0,0,0,27,120,1,0,0,0,29,124,
        1,0,0,0,31,131,1,0,0,0,33,145,1,0,0,0,35,152,1,0,0,0,37,163,1,0,
        0,0,39,175,1,0,0,0,41,182,1,0,0,0,43,44,5,76,0,0,44,45,5,73,0,0,
        45,46,5,78,0,0,46,47,5,75,0,0,47,2,1,0,0,0,48,49,5,73,0,0,49,50,
        5,70,0,0,50,4,1,0,0,0,51,52,5,78,0,0,52,53,5,79,0,0,53,54,5,68,0,
        0,54,55,5,69,0,0,55,6,1,0,0,0,56,57,5,65,0,0,57,58,5,84,0,0,58,8,
        1,0,0,0,59,60,5,84,0,0,60,61,5,73,0,0,61,62,5,77,0,0,62,63,5,69,
        0,0,63,10,1,0,0,0,64,66,5,32,0,0,65,64,1,0,0,0,66,67,1,0,0,0,67,
        65,1,0,0,0,67,68,1,0,0,0,68,12,1,0,0,0,69,73,3,15,7,0,70,73,3,17,
        8,0,71,73,3,25,12,0,72,69,1,0,0,0,72,70,1,0,0,0,72,71,1,0,0,0,73,
        14,1,0,0,0,74,75,5,79,0,0,75,76,5,80,0,0,76,77,5,69,0,0,77,78,5,
        78,0,0,78,16,1,0,0,0,79,80,5,67,0,0,80,81,5,76,0,0,81,82,5,79,0,
        0,82,83,5,83,0,0,83,84,5,69,0,0,84,85,5,68,0,0,85,18,1,0,0,0,86,
        89,3,21,10,0,87,89,3,23,11,0,88,86,1,0,0,0,88,87,1,0,0,0,89,20,1,
        0,0,0,90,91,5,66,0,0,91,92,5,69,0,0,92,93,5,76,0,0,93,94,5,79,0,
        0,94,95,5,87,0,0,95,22,1,0,0,0,96,97,5,65,0,0,97,98,5,66,0,0,98,
        99,5,79,0,0,99,100,5,86,0,0,100,101,5,69,0,0,101,24,1,0,0,0,102,
        104,7,0,0,0,103,102,1,0,0,0,104,107,1,0,0,0,105,103,1,0,0,0,105,
        106,1,0,0,0,106,111,1,0,0,0,107,105,1,0,0,0,108,110,5,46,0,0,109,
        108,1,0,0,0,110,113,1,0,0,0,111,109,1,0,0,0,111,112,1,0,0,0,112,
        115,1,0,0,0,113,111,1,0,0,0,114,116,7,0,0,0,115,114,1,0,0,0,116,
        117,1,0,0,0,117,115,1,0,0,0,117,118,1,0,0,0,118,26,1,0,0,0,119,121,
        7,1,0,0,120,119,1,0,0,0,121,122,1,0,0,0,122,120,1,0,0,0,122,123,
        1,0,0,0,123,28,1,0,0,0,124,128,7,2,0,0,125,127,9,0,0,0,126,125,1,
        0,0,0,127,130,1,0,0,0,128,129,1,0,0,0,128,126,1,0,0,0,129,30,1,0,
        0,0,130,128,1,0,0,0,131,132,5,91,0,0,132,133,5,67,0,0,133,134,5,
        79,0,0,134,135,5,78,0,0,135,136,5,84,0,0,136,137,5,82,0,0,137,138,
        5,79,0,0,138,139,5,76,0,0,139,140,5,83,0,0,140,141,5,93,0,0,141,
        32,1,0,0,0,142,144,9,0,0,0,143,142,1,0,0,0,144,147,1,0,0,0,145,146,
        1,0,0,0,145,143,1,0,0,0,146,148,1,0,0,0,147,145,1,0,0,0,148,149,
        3,31,15,0,149,150,1,0,0,0,150,151,6,16,0,0,151,34,1,0,0,0,152,153,
        5,91,0,0,153,154,3,29,14,0,154,158,5,93,0,0,155,157,9,0,0,0,156,
        155,1,0,0,0,157,160,1,0,0,0,158,159,1,0,0,0,158,156,1,0,0,0,159,
        161,1,0,0,0,160,158,1,0,0,0,161,162,6,17,0,0,162,36,1,0,0,0,163,
        167,5,59,0,0,164,166,9,0,0,0,165,164,1,0,0,0,166,169,1,0,0,0,167,
        168,1,0,0,0,167,165,1,0,0,0,168,170,1,0,0,0,169,167,1,0,0,0,170,
        171,3,39,19,0,171,172,1,0,0,0,172,173,6,18,0,0,173,38,1,0,0,0,174,
        176,7,3,0,0,175,174,1,0,0,0,176,177,1,0,0,0,177,175,1,0,0,0,177,
        178,1,0,0,0,178,179,1,0,0,0,179,180,6,19,0,0,180,40,1,0,0,0,181,
        183,7,4,0,0,182,181,1,0,0,0,183,184,1,0,0,0,184,182,1,0,0,0,184,
        185,1,0,0,0,185,186,1,0,0,0,186,187,6,20,0,0,187,42,1,0,0,0,14,0,
        67,72,88,105,111,117,122,128,145,158,167,177,184,1,6,0,0
    ]

class controlsLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    ANY_SPACE = 6
    STATE = 7
    OPEN = 8
    CLOSED = 9
    CONDITION = 10
    BELOW = 11
    ABOVE = 12
    VALUE = 13
    ID = 14
    CAPITALS = 15
    CONTROLS_HEADER = 16
    PRECONTORLS = 17
    POSTCONTROLS = 18
    COMMENT = 19
    NEWLINES = 20
    WS = 21

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'LINK'", "'IF'", "'NODE'", "'AT'", "'TIME'", "'OPEN'", "'CLOSED'", 
            "'BELOW'", "'ABOVE'", "'[CONTROLS]'" ]

    symbolicNames = [ "<INVALID>",
            "ANY_SPACE", "STATE", "OPEN", "CLOSED", "CONDITION", "BELOW", 
            "ABOVE", "VALUE", "ID", "CAPITALS", "CONTROLS_HEADER", "PRECONTORLS", 
            "POSTCONTROLS", "COMMENT", "NEWLINES", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "ANY_SPACE", "STATE", 
                  "OPEN", "CLOSED", "CONDITION", "BELOW", "ABOVE", "VALUE", 
                  "ID", "CAPITALS", "CONTROLS_HEADER", "PRECONTORLS", "POSTCONTROLS", 
                  "COMMENT", "NEWLINES", "WS" ]

    grammarFileName = "controls.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


