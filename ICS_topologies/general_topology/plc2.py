from basePLC import BasePLCfrom utils import PLC2_DATA, STATE, PLC2_PROTOCOLfrom utils import T_LVL, P1_STS, P2_STS,ATT_1, PLC1_ADDR,  \    flag_attack_plc2, CONTROLfrom datetime import datetimefrom decimal import Decimalimport timeimport signalclass PLC(BasePLC):    def pre_loop(self):        self.saved_tank_levels = [["iteration", "timestamp", "TANK_LEVEL"]]        path = 'plc2_saved_tank_levels_received.csv'        BasePLC.set_parameters(self, path, self.saved_tank_levels)        self.startup()        print 'DEBUG: plc2 enters pre_loop'        self.local_time = 0    def main_loop(self):        """plc2 main loop.            - read flow level sensors #2            - update interval enip server        """        print 'DEBUG: plc2 enters main_loop.'        while True:            try:                #self.tank_level = Decimal(self.receive(T_LVL, PLC1_ADDR))                #self.attack = Decimal(self.receive(ATT_1, PLC1_ADDR))                tags = []                tags.append(T_LVL)                tags.append(ATT_1)                values = self.receive_multiple(tags, PLC1_ADDR)                self.tank_level = Decimal(values[0])                self.attack = values[1]            except Exception:                continue            self.local_time += 1            self.saved_tank_levels.append([self.local_time, datetime.now(), self.tank_level])            if flag_attack_plc2:                if 300 <= self.local_time <= 450:                    self.set(ATT_1, 1)                    time.sleep(0.1)                    continue                else:                    self.set(ATT_1, 0)            print "DEBUG: T_LVL: " + str(self.tank_level)            if self.tank_level < 4:                print "DEBUG: P1_STS: 1"                self.set(P1_STS, 1)            if self.tank_level > 6.3:                print "DEBUG: P1_STS: 0"                self.set(P1_STS, 0)            # CONTROL PUMP2            if self.tank_level < 1:                print "DEBUG: P2_STS: 1"                self.set(P2_STS, 1)            if self.tank_level > 4.5:                print "DEBUG: P2_STS: 0"                self.set(P2_STS, 0)if __name__ == "__main__":    plc2 = PLC(        name='plc2',        state=STATE,        protocol=PLC2_PROTOCOL,        memory=PLC2_DATA,        disk=PLC2_DATA)