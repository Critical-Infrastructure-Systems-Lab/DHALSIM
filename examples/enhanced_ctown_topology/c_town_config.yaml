---
# Simulation initialization parameters.
initial_custom_flag: "True"
week_index: 0
demand_patterns_path: "../../Demand_patterns/three_year_demands_ctown.csv" # that file was this one. the total demand pattern csv
starting_demand_path: "../../Demand_patterns/starting_demand_points.csv" # that would be this file
initial_tank_levels_path: "../../Demand_patterns/tank_initial_conditions.csv" #

network_delay_path: "../../Demand_patterns/network_links_delay_small.csv"
network_losses_path: "../../Demand_patterns/network_loss_small.csv"

# EPANET inp file that will be represented in DHALSIM
#epanet_topo_path: "../../Demand_patterns/ctown_map_with_controls.inp"
epanet_topo_path: "ctown_map.inp"
#epanet_topo_path: "ctown_map_with_controls.inp"
epanet_cpa_path: "../../Demand_patterns/ctown.cpa"

# General simulation parameters
db_path: "ctown_db.sqlite"
output_ground_truth_path: "physical_process.csv"
duration_days: 1
#duration_days: 1
#duration_days: 10
inp_file: "ctown_map.inp"
simulator: "pdd"

# PLC dictionary output file
# This is the output path of the epanet_parser script. A YAML file that synthetizes the control logc and PLC
# configuration parsed from the EPANET and epanetCPA files
# There shouldn't be a real reason to change the path of this temporary file
plc_dict_path: "plc_dicts.yaml"

# Network simulation parameters
# True in complex topology means that each PLC is in its own LAN; NAT and port forwarding is used to connect the LAns
# in a start topology. This uses the mininet topology described in simple_topo.py
# False in complex topology means that all the PLCs are in the same LAN. This uses the mininet topology describes in
# complex_topo.py
complex_topology: "True"

# Simulation type. Supported values now are "Single" and "Batch"
# A single simulation runs only once. Possibly using the customization values as defined by initial_custom_flag
# In single simulations, the week_index parameter is read from this config file
# A Batch simulation runs consecutive weeks. Batch simulation requires that the initial_custom_flag is set to true
# and that the demand paths are correctly set. Batch simulations takes the week_index parameter for sys.argv. Hence,
# the responsibility of passing this parameter to general_automatic_run.py is on the calling script
simulation_type: "Single"

# Run attack. Boolean.
# This flag indicates if the experiment will have an attack in the network
# Using this flag also requires setting the value of attacks_path and attack_name.
# The attack_name should be present in the attacks_path file
run_attack: "False"
attacks_path: "../../attack_repository/attack_description.yaml"
attack_name: "network_empty_tank_1"